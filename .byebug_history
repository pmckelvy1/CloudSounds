c
plist.songsc
song
plist.songs[1]
plist.songs[0]
plist.songs.length
plist.songs
c
song_id
plist.songs[0].id
plist.songs[0]
plist.songs
plist
c
s
playlist.user_id
user_id
sng
c
s
song
c
@playlist_item.valid?
c
song.id
song_id
c
song_id
song.id
c
song_id
song
c
song.id
c
song_id
song.id
song
c
song_id
song.id
song
c
song_id
song.id
song
c
s
song.id == song_id
song
c
s
playlist.songs
playlist
c
s
song_id
user_playlists[0].songs[0].id
user_playlists[0].songs
user_playlists[0]
user_playlists
c
p.each  { |i| puts i.user_id }
p.each  { |i| 1 + 1 }
p.each do { |i| 1 + 1 }
p.each do { 1 + 1 }
p = Playlist.where(user_id: 429)
Playlist.where(user_id: 429)
Playlist.find(28)
playlist.user_id
playlist
current_user.id
playlist_id
params
c
playlist.playlist_items.length
playlist.playlist_items
playlist
c
playlist.playlist_items.length
playlist.playlist_items
playlist
c
item_count
c
a.tempfile.methods
a.tempfile.play
a.tempfile
a.methods
a = params[:song][:audio]
audio
params[:song]
quit
params[:song][:image] == "null"
params[:song][:image] == null
params[:song][:image]
song_params
c
auth_hash.extra.raw_info.name
auth_hash.extra.raw_info.email
auth_hash.extra.raw_info.email.name
auth_hash.extra.raw_info.email
auth_hash.extra.raw_info
auth_hash.extra
auth_hash.raw_info
auth_hash
auth_hashs
c
@playlist_item.valid?
@playlist_item.song_id
c
s
@playlist_item
c
highest_ord
c
highest_ord
c
highest_ord[0]
highest_ord
c
highest_ord
c
highest_ord
c
highest_ord[0]
highest_ord
c
@user.followed_songs
@user.liked_songs
@user.likes_songs
@user.songs
@user.playlists
c
s
ss
s
@user.playlists
@user
